// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    alias(libs.plugins.android.application) apply false
    alias(libs.plugins.kotlin.android) apply false
    alias(libs.plugins.kotlin.compose) apply false
}

// Apply checkstyle to all subprojects
subprojects {
    apply plugin: 'checkstyle'
    
    tasks.register('checkstyle', Checkstyle) {
        description 'Check code convention'
        group 'verification'
        configFile file("${rootProject.rootDir}/tools/sun_checks.xml")
        
        // 스테이징된 파일이 지정되면 해당 파일들만 검사, 아니면 전체 검사
        if (project.hasProperty('checkstyle.source.files')) {
            def stagedFiles = project.property('checkstyle.source.files').toString().split(' ')
            source files(stagedFiles.findAll { it.endsWith('.java') && file(it).exists() })
        } else {
            source 'src/main/java'
            include '**/*.java'
        }
        
        classpath = files()
        ignoreFailures = false

        reports {
            xml.required = true
            html.required = true
        }
    }

    tasks.register('copyGitHooks', Copy) {
        from("${rootDir}/git-hooks/") {
            include '**/*'
            rename '(.*)', '$1'
        }
        into "${rootDir}/.git/hooks"
    }

    task installGitHooks(type: Exec) {
        group 'git hooks'
        workingDir rootDir
        commandLine 'chmod'
        args '-R', '+x', '.git/hooks/'
        dependsOn copyGitHooks
    }
    
    // Make checkstyle run before build
//    tasks.named('preBuild').configure {
//        dependsOn 'checkstyle'
//    }
}